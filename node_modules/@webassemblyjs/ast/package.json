{
  "_args": [
    [
      {
        "raw": "@webassemblyjs/ast@1.3.1",
        "scope": "@webassemblyjs",
        "escapedName": "@webassemblyjs%2fast",
        "name": "@webassemblyjs/ast",
        "rawSpec": "1.3.1",
        "spec": "1.3.1",
        "type": "version"
      },
      "D:\\OpenServer\\domains\\fulljs.loc\\node_modules\\webpack"
    ]
  ],
  "_from": "@webassemblyjs/ast@1.3.1",
  "_id": "@webassemblyjs/ast@1.3.1",
  "_inCache": true,
  "_location": "/@webassemblyjs/ast",
  "_nodeVersion": "6.11.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ast_1.3.1_1525716529266_0.3378289251049018"
  },
  "_npmUser": {
    "name": "xtuc",
    "email": "contact@xtuc.fr"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@webassemblyjs/ast@1.3.1",
    "scope": "@webassemblyjs",
    "escapedName": "@webassemblyjs%2fast",
    "name": "@webassemblyjs/ast",
    "rawSpec": "1.3.1",
    "spec": "1.3.1",
    "type": "version"
  },
  "_requiredBy": [
    "/@webassemblyjs/helper-wasm-section",
    "/@webassemblyjs/validation",
    "/@webassemblyjs/wasm-edit",
    "/@webassemblyjs/wasm-gen",
    "/@webassemblyjs/wasm-opt",
    "/@webassemblyjs/wasm-parser",
    "/@webassemblyjs/wast-parser",
    "/@webassemblyjs/wast-printer",
    "/webassemblyjs",
    "/webpack"
  ],
  "_resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.3.1.tgz",
  "_shasum": "3081b4b3ff0af733aa5ba573af998f33711293f8",
  "_shrinkwrap": null,
  "_spec": "@webassemblyjs/ast@1.3.1",
  "_where": "D:\\OpenServer\\domains\\fulljs.loc\\node_modules\\webpack",
  "author": {
    "name": "Sven Sauleau"
  },
  "bugs": {
    "url": "https://github.com/xtuc/webassemblyjs/issues"
  },
  "dependencies": {
    "@webassemblyjs/helper-wasm-bytecode": "1.3.1",
    "@webassemblyjs/wast-parser": "1.3.1",
    "webassemblyjs": "1.3.1"
  },
  "description": "AST utils for webassemblyjs",
  "devDependencies": {
    "dump-exports": "^0.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-WJKy500MK6cM5LNcOjKlLHnYtTU5PcmL06iXErYriA90GLn7W/EzIyknZRx0Bj3W6FjYKTPkHADdE3GM0ZJk1Q==",
    "shasum": "3081b4b3ff0af733aa5ba573af998f33711293f8",
    "tarball": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.3.1.tgz",
    "fileCount": 16,
    "unpackedSize": 76403,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa8JYyCRA9TVsSAnZWagAA2CMP/jZrZnzEEhgXCoXFzBVt\nV+vfGcxdPqcwioK9cTi63OZ5x+7Ic4rebbMIRdnPCoYKa+nGrblMIYyiNTF1\niqWKB23jna/8tsRcBuLlFwzahxyQckzGtaGKu4NfS9YcMm11ko7EuVAEyFko\njxfhPIenlzWhFeBAt1nw1RqoYRl2gYFackTC0uRP4qV3wZQCrRPkfa/k9v4z\nMxR8qvEFlHm0FGGEkN04txbPX/RRD7Gzny6Y346qaxJsrnSEL37T+oqy0iCZ\nAtzZUeInUiVEd3GO5EbfoKDMeiGiFj30PvjPS7TPwGwHt08xdwKsdX2vfoUJ\nWmw0vlQP1QwaboTVuwGBAttYTFNDoyQgKe0BrqpcWeL82oWWB2GjsV1VYJea\nS0tSVJuf8357bV921TCnlezPZQ/BKyQTsBafN6qWBTP3t3SIDnB3wvNanh3g\nWDpLrvwjTijn16fkehpeVvHa55BQdhs5WAbPCUSVsvGIeKyt95VPddm3rGFO\nPwZzVzFgU/loRCkDiGLSh1eEufLtWx68wvGTEU5uKDS0eX2QksXp6XzTT3Sy\nw3yQDaMDspZTYWWBJSNfP8NqM3aVEHcgsPewON7Te0SpDYXnx3AHb6gJ7ZXo\njZM4/LWVBd3XN7F78RpfiYQUFfn7QXSFKAqjAJynVlDhGLBdrcgYZB8sueRa\nTs27\r\n=pRZW\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/xtuc/webassemblyjs#readme",
  "keywords": [
    "webassembly",
    "javascript",
    "ast"
  ],
  "license": "GPL-2.0",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "name": "@webassemblyjs/ast",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# @webassemblyjs/ast\n\n> AST utils for webassemblyjs\n\n## Installation\n\n```sh\nnpm install @webassemblyjs/ast\n```\n\n## Usage\n\n### Traverse\n\n```js\nimport { traverse } from \"@webassemblyjs/ast\";\n\ntraverse(ast, {\n  Module(path) {\n    console.log(path.node);\n  }\n});\n```\n\n### Instruction signatures\n\n```js\nimport { signatures } from \"@webassemblyjs/ast\";\n\nconsole.log(signatures);\n```\n\n### AST Nodes\n\n- function `signature(object, name)`\n- function `identifier(value)`\n- function `valtype(name)`\n- function `stringLiteral(value)`\n- function `program(body)`\n- function `module(id, fields)`\n- function `binaryModule(id, blob)`\n- function `quoteModule(id, string)`\n- function `moduleExport(name, type, id)`\n- function `func(name, params, result, body)`\n- function `objectInstruction(id, object, args, namedArgs)`\n- function `instruction(id, args, namedArgs)`\n- function `loopInstruction(label, resulttype, instr)`\n- function `blockInstruction(label, instr, result)`\n- function `numberLiteral(rawValue, instructionType)`\n- function `callInstruction(index, instrArgs)`\n- function `ifInstruction(testLabel, result, test, consequent, alternate)`\n- function `withLoc(n, end, start)`\n- function `moduleImport(module, name, descr)`\n- function `globalImportDescr(valtype, mutability)`\n- function `funcParam(valtype, id)`\n- function `funcImportDescr(id, params, results)`\n- function `table(elementType, limits, name, elements)`\n- function `limits(min, max)`\n- function `memory(limits, id)`\n- function `data(memoryIndex, offset, init)`\n- function `global(globalType, init, name)`\n- function `globalType(valtype, mutability)`\n- function `byteArray(values)`\n- function `leadingComment(value)`\n- function `blockComment(value)`\n- function `indexLiteral(value)`\n- function `memIndexLiteral(value)`\n- function `typeInstructionFunc(params, result, id)`\n- function `callIndirectInstruction(params, results, intrs)`\n- function `start(index)`\n- function `elem(table, offset, funcs)`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xtuc/webassemblyjs.git"
  },
  "version": "1.3.1"
}
